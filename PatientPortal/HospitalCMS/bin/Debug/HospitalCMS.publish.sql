/*
Deployment script for HospitalCMS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HospitalCMS"
:setvar DefaultFilePrefix "HospitalCMS"
:setvar DefaultDataPath "D:\MSSQL\DATA\"
:setvar DefaultLogPath "D:\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'The following operation was generated from a refactoring log file dbc242c7-db6d-43ac-bf0c-1cead3121561';

PRINT N'Rename [dbo].[Post].[MdifiedBy] to ModifiedBy';


GO
EXECUTE sp_rename @objname = N'[dbo].[Post].[MdifiedBy]', @newname = N'ModifiedBy', @objtype = N'COLUMN';


GO
PRINT N'Creating [dbo].[usp_Post_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_Post_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM Post
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
PRINT N'Creating [dbo].[usp_Post_Transaction]...';


GO
CREATE PROCEDURE [dbo].[usp_Post_Transaction]
	@Action CHAR(1) = 'I',
	@date DATE,
	@image VARCHAR(256),
	@author NVARCHAR(50),
	@workflowStateId TINYINT,
	@categoryId TINYINT,
	@status TINYINT,
	@createdDate VARCHAR(20),
	@createdBy INT,
	@modifiredDate VARCHAR(20),
	@modifiredBy INT
AS BEGIN
	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED

	DECLARE @return bit = 1
	BEGIN TRY
		BEGIN TRAN
			IF @Action = 'I' -- INSERT POST
				BEGIN
					INSERT INTO Post
					VALUES(@date,@image,@author,@workflowStateId,@categoryId,@status,@createdDate,@createdBy,@modifiredDate,@modifiredBy)
				END				
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
	SELECT @return
END
GO
PRINT N'Creating [dbo].[usp_PostSEO_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_PostSEO_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM PostSEO
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
PRINT N'Creating [dbo].[usp_PostStateHistory_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_PostStateHistory_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM PostStateHistory
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
PRINT N'Creating [dbo].[usp_PostTrans_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_PostTrans_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM PostTrans
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
PRINT N'Creating [dbo].[usp_Workflow_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_Workflow_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM Workflow
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
PRINT N'Creating [dbo].[usp_WorkflowNavigation_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_WorkflowNavigation_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM WorkflowNavigation
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0 
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
PRINT N'Creating [dbo].[usp_WorkflowState_GetAll]...';


GO
CREATE PROCEDURE [dbo].[usp_WorkflowState_GetAll]
AS BEGIN
	BEGIN TRY
		SELECT * FROM WorkflowState
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dbc242c7-db6d-43ac-bf0c-1cead3121561')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dbc242c7-db6d-43ac-bf0c-1cead3121561')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
