/*
Deployment script for HospitalCMS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HospitalCMS"
:setvar DefaultFilePrefix "HospitalCMS"
:setvar DefaultDataPath "D:\MSSQL\DATA\"
:setvar DefaultLogPath "D:\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Dropping [dbo].[FK_GalleryStore_Gallery]...';


GO
ALTER TABLE [dbo].[GalleryStore] DROP CONSTRAINT [FK_GalleryStore_Gallery];


GO
PRINT N'Starting rebuilding table [dbo].[Gallery]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Gallery] (
    [Id]           VARCHAR (128)  NOT NULL,
    [Title]        NVARCHAR (128) NOT NULL,
    [Description]  NVARCHAR (300) NOT NULL,
    [Highlight]    NVARCHAR (100) NOT NULL,
    [Img]          VARCHAR (256)  NOT NULL,
    [YoutubeURL]   VARCHAR (500)  NULL,
    [Date]         VARCHAR (20)   NOT NULL,
    [DepartmentId] TINYINT        NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Gallery])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Gallery] ([Id], [Title], [Description], [Highlight], [Img], [Date], [DepartmentId])
        SELECT   [Id],
                 [Title],
                 [Description],
                 [Highlight],
                 [Img],
                 [Date],
                 [DepartmentId]
        FROM     [dbo].[Gallery]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Gallery];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Gallery]', N'Gallery';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[GalleryStore]...';


GO
ALTER TABLE [dbo].[GalleryStore]
    ADD [YoutubeURL] VARCHAR (500) NULL;


GO
PRINT N'Creating [dbo].[FK_GalleryStore_Gallery]...';


GO
ALTER TABLE [dbo].[GalleryStore] WITH NOCHECK
    ADD CONSTRAINT [FK_GalleryStore_Gallery] FOREIGN KEY ([ParentId]) REFERENCES [dbo].[Gallery] ([Id]);


GO
PRINT N'Altering [dbo].[usp_spa_Post_Paging]...';


GO
ALTER PROCEDURE [dbo].[usp_spa_Post_Paging]
	@languageCode CHAR(3) = 'vi',
	@categoryId TINYINT = 0,
	@priority TINYINT = 1, 
	@pageIndex TINYINT = 1, 
	@numberInPage TINYINT = 10, 
	@Search nvarchar(250) = '',
	@totalItem int out
AS BEGIN
	BEGIN TRY
	SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		IF @languageCode != '' AND @categoryId > 0
			IF @priority = 3
			BEGIN	----get new posts
				SELECT  *, ROW_NUMBER() OVER (ORDER BY PublishDate) AS RowNum INTO #tmpPost FROM (
					
				SELECT 
					p.Id, 
					p.CategoryId,
					p.PublishDate,
					P.[Image],
					P.Author,
					t.Title as TitleTran,
					t.Detail,
					t.[Description] as DescriptionTrans,
					c.Name AS CategoryName, 
					ws.Id AS WorkflowStateId,
					ws.Name AS WorkflowStateName,
					p.[Priority]
				FROM 
					[dbo].Post p, 
					[dbo].PostTrans t, 
					[dbo].Category c, 
					WorkflowState ws
				WHERE 
					p.Id = t.PostId
					AND p.CategoryId = c.Id
					AND p.WorkflowStateId = ws.Id
					AND WorkflowStateId = 3
					AND p.CategoryId = @categoryId
					AND ((t.Title like '%' + @Search + '%' OR  @Search is null OR @Search = '')
					OR (P.Author like N'%' + @Search +'%' OR  @Search is null OR @Search = ''))

				) as tmp
				

				set @totalItem = (SELECT count(*) FROM #tmpPost)
				SELECT  *
				FROM	#tmpPost
				WHERE   RowNum BETWEEN (@PageIndex - 1) * @numberInPage + 1
						AND @PageIndex * @numberInPage ;
			END
			ELSE	--- get posts order by priority
			BEGIN
				SELECT  *, ROW_NUMBER() OVER (ORDER BY PublishDate) AS RowNum INTO #tmppriorityPost FROM (
				SELECT 
					p.Id, 
					p.CategoryId,
					p.PublishDate,
					P.[Image],
					P.Author,
					t.Title as TitleTran,
					t.Detail,
					t.[Description] as DescriptionTrans,
					c.Name AS CategoryName, 
					ws.Id AS WorkflowStateId,
					ws.Name AS WorkflowStateName,
					p.[Priority]
				FROM 
					[dbo].Post p, 
					[dbo].PostTrans t, 
					[dbo].Category c, 
					WorkflowState ws
				WHERE 
					p.Id = t.PostId
					AND p.CategoryId = c.Id
					AND p.WorkflowStateId = ws.Id
					AND WorkflowStateId = 3
					AND p.CategoryId = @categoryId
					AND p.[Priority] = @priority
					AND ((t.Title like '%' + @Search + '%' OR  @Search is null OR @Search = '')
					OR (P.Author like N'%' + @Search +'%' OR  @Search is null OR @Search = ''))
				) as tmppriority
				set @totalItem = (SELECT count(*) FROM #tmppriorityPost)
				SELECT  *
				FROM	#tmppriorityPost
				WHERE   RowNum BETWEEN (@PageIndex - 1) * @numberInPage + 1
						AND @PageIndex * @numberInPage ;
			END
		ELSE
			RETURN NULL

	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT <> 0
			BEGIN
				RETURN NULL
			END
	END CATCH
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].[Workflow] WHERE Name = N'Workflow post')
BEGIN
	DECLARE @WorkflowId TINYINT = 0
	DECLARE @WorkflowStateId TINYINT = 0
	DECLARE @NextWorkflowStateId TINYINT = 0
	---------------
	INSERT INTO [dbo].Workflow
	VALUES(N'Workflow post')
	---------
	IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].WorkflowState WHERE Name = N'Đang soạn thảo')
		BEGIN
			SET @WorkflowId = SCOPE_IDENTITY()
			INSERT INTO [dbo].WorkflowState
			VALUES(N'Đang soạn thảo', @WorkflowId, 1, 1)

			SET @WorkflowStateId = SCOPE_IDENTITY()
		END
	---------------
	IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].WorkflowState WHERE Name = N'Đã duyệt')
		BEGIN
			INSERT INTO [dbo].WorkflowState
			VALUES(N'Đã duyệt', @WorkflowId, 1, 0)

			SET @WorkflowStateId = SCOPE_IDENTITY()
		END
	--------------
	IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].WorkflowState WHERE Name = N'Đã đăng bài')
		BEGIN
			INSERT INTO [dbo].WorkflowState
			VALUES(N'Đã đăng bài', @WorkflowId, 1, 0)

			SET @NextWorkflowStateId = SCOPE_IDENTITY()
		END
	----------------------
	IF @WorkflowStateId > 0 AND @NextWorkflowStateId > 0
		BEGIN
			INSERT INTO [dbo].WorkflowNavigation
			VALUES(@WorkflowStateId, @NextWorkflowStateId)
		END
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Category WHERE Name = N'Trang chủ')
	BEGIN
		INSERT INTO [dbo].Category
		VALUES(N'Trang chủ', '', '/', 1, 0)	
	END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Category WHERE Name = N'Dịch vụ')
	BEGIN
		INSERT INTO [dbo].Category
		VALUES(N'Dịch vụ', '', '#services', 2, 0)	
	END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Category WHERE Name = N'Chuyên khoa')
	BEGIN
		INSERT INTO [dbo].Category
		VALUES(N'Chuyên khoa', '', '#portfolio', 3, 0)	
	END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Category WHERE Name = N'Giới thiệu')
	BEGIN
		INSERT INTO [dbo].Category
		VALUES(N'Giới thiệu', '', '#about', 4, 0)	
	END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Category WHERE Name = N'Tin tức')
	BEGIN
		INSERT INTO [dbo].Category
		VALUES(N'Tin tức', '', '#blog', 5, 0)	
	END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Category WHERE Name = N'Liên hệ')
	BEGIN
		INSERT INTO [dbo].Category
		VALUES(N'Liên hệ', '', '#get-in-touch', 6, 0)	
	END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].Language WHERE Code = 'vi')
	BEGIN
		INSERT INTO [dbo].Language
		VALUES('vi', 'VietNam')	
	END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[GalleryStore] WITH CHECK CHECK CONSTRAINT [FK_GalleryStore_Gallery];


GO
PRINT N'Update complete.';


GO
