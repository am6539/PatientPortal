/*
Deployment script for HospitalCMS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HospitalCMS"
:setvar DefaultFilePrefix "HospitalCMS"
:setvar DefaultDataPath "D:\MSSQL\DATA\"
:setvar DefaultLogPath "D:\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Creating [dbo].[Workflow]...';


GO
CREATE TABLE [dbo].[Workflow] (
    [Id]   TINYINT       IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Workflow] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[WorkflowNavigation]...';


GO
CREATE TABLE [dbo].[WorkflowNavigation] (
    [WorkflowStateId]     SMALLINT NOT NULL,
    [NextWorkflowStateId] SMALLINT NOT NULL,
    CONSTRAINT [PK_WorkflowNavigation] PRIMARY KEY CLUSTERED ([WorkflowStateId] ASC, [NextWorkflowStateId] ASC)
);


GO
PRINT N'Creating [dbo].[WorkflowState]...';


GO
CREATE TABLE [dbo].[WorkflowState] (
    [Id]         SMALLINT      IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50) NOT NULL,
    [WorkflowId] TINYINT       NOT NULL,
    [IsActive]   BIT           NOT NULL,
    [IsFirst]    BIT           NOT NULL,
    CONSTRAINT [PK_WorkflowStatus] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[WorkflowState].[idxWorkflowStateWorkflow]...';


GO
CREATE NONCLUSTERED INDEX [idxWorkflowStateWorkflow]
    ON [dbo].[WorkflowState]([WorkflowId] ASC);


GO
PRINT N'Creating [dbo].[FK_WorkflowNavigation_WorkflowState]...';


GO
ALTER TABLE [dbo].[WorkflowNavigation] WITH NOCHECK
    ADD CONSTRAINT [FK_WorkflowNavigation_WorkflowState] FOREIGN KEY ([WorkflowStateId]) REFERENCES [dbo].[WorkflowState] ([Id]);


GO
PRINT N'Creating [dbo].[FK_WorkflowNavigation_WorkflowState1]...';


GO
ALTER TABLE [dbo].[WorkflowNavigation] WITH NOCHECK
    ADD CONSTRAINT [FK_WorkflowNavigation_WorkflowState1] FOREIGN KEY ([NextWorkflowStateId]) REFERENCES [dbo].[WorkflowState] ([Id]);


GO
PRINT N'Creating [dbo].[FK_WorkflowState_Workflow]...';


GO
ALTER TABLE [dbo].[WorkflowState] WITH NOCHECK
    ADD CONSTRAINT [FK_WorkflowState_Workflow] FOREIGN KEY ([WorkflowId]) REFERENCES [dbo].[Workflow] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].[Workflow] WHERE Name = N'Workflow post')
BEGIN
	DECLARE @WorkflowId TINYINT = 0
	DECLARE @WorkflowStateId TINYINT = 0
	DECLARE @NextWorkflowStateId TINYINT = 0
	---------------
	INSERT INTO [dbo].Workflow
	VALUES(N'Workflow post')
	---------
	IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].WorkflowState WHERE Name = N'Đang soạn thảo')
		BEGIN
			SET @WorkflowId = SCOPE_IDENTITY()
			INSERT INTO [dbo].WorkflowState
			VALUES(N'Đang soạn thảo', @WorkflowId, 1, 1)

			SET @WorkflowStateId = SCOPE_IDENTITY()
		END
	---------------
	IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].WorkflowState WHERE Name = N'Đã duyệt')
		BEGIN
			INSERT INTO [dbo].WorkflowState
			VALUES(N'Đã duyệt', @WorkflowId, 1, 0)

			SET @WorkflowStateId = SCOPE_IDENTITY()
		END
	--------------
	IF NOT EXISTS (SELECT TOP 1 1 FROM [dbo].WorkflowState WHERE Name = N'Đã đăng bài')
		BEGIN
			INSERT INTO [dbo].WorkflowState
			VALUES(N'Đã đăng bài', @WorkflowId, 1, 0)

			SET @NextWorkflowStateId = SCOPE_IDENTITY()
		END
	----------------------
	IF @WorkflowStateId > 0 AND @NextWorkflowStateId > 0
		BEGIN
			INSERT INTO [dbo].WorkflowNavigation
			VALUES(@WorkflowStateId, @NextWorkflowStateId)
		END
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[WorkflowNavigation] WITH CHECK CHECK CONSTRAINT [FK_WorkflowNavigation_WorkflowState];

ALTER TABLE [dbo].[WorkflowNavigation] WITH CHECK CHECK CONSTRAINT [FK_WorkflowNavigation_WorkflowState1];

ALTER TABLE [dbo].[WorkflowState] WITH CHECK CHECK CONSTRAINT [FK_WorkflowState_Workflow];


GO
PRINT N'Update complete.';


GO
