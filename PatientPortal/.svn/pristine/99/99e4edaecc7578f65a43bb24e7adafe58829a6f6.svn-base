@model PatientPortal.Internal.Models.Account.UserProfileViewModel
@{
    ViewBag.Title = "Thêm hồ sơ bác sĩ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Libs/Chosen/css/chosen.css" rel="stylesheet" />
}
@using (Html.BeginForm("Create", "UserProfile", FormMethod.Post))
{
    @Html.Raw(TempData["Alert"])
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-title">@ViewBag.Title</div>

        <div class="card-content">
            <div class="col col-md-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserId, new { @class = "col-sm-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.UserId, new SelectList(ViewBag.User, "Id", "Name"), "--Chọn người dùng--", new { @class = "chosen-select", @data_placeholder = "--Chọn người dùng--" })
                        </div>
                    </div> <!-- /.form-group -->

                    <div class="form-group">
                        @Html.LabelFor(m => m.TabCode, new { @class = "col-sm-2 control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TabCode, null, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tiêu đề" } })
                            @Html.ValidationMessageFor(model => model.TabCode, null, new { @class = "field-validation-error" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { @class = "col-sm-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @name = "editor3", @id = "editor3", @placeholder = "Nội dung" })
                            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "field-validation-error" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-5 col-sm-offset-3">
                        <button type="submit" class="btn btn-primary btn-block">Tạo mới</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section scripts{
    <script src="~/Libs/ckeditor/ckeditor.js"></script>
    <script src="~/Libs/Chosen/js/chosen.jquery.min.js"></script>
    <script>
        CKEDITOR.replace('editor3', {
            filebrowserImageBrowseUrl: '/Library/UploadPartial?folder=' + '',
            filebrowserImageUploadUrl: '/Library/UploadNow?folder=' + ''
        });
    </script>

    <script type="text/javascript">
            var config = {
              '.chosen-select'           : {}
            }
            for (var selector in config) {
              $(selector).chosen(config[selector]);
            }
    </script>
}