using AutoMapper;
using Newtonsoft.Json;
using PatientPortal.API.SPA.Common;
using PatientPortal.API.SPA.Utility;
using PatientPortal.API.SPA.ViewModels;
using PatientPortal.IRepository.SPA;
using PatientPortal.Provider.Models;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Web.Http;
using System.Web.Mvc;

namespace PatientPortal.API.SPA.Controllers
{
    public class DepartmentController : ApiController
    {
        readonly IDepartmentRepo _department;

        public DepartmentController(IDepartmentRepo department)
        {
            this._department = department;
        }

        public async Task<DepartmentViewModel> Get(short id)
        {
            try
            {
                IList<string> list = new List<string> { "id" };
                var para = APIProvider.APIDefaultParameter(list, id);

                var data = await _department.SingleQuery(para);
                var results = Mapper.Map<DepartmentViewModel>(data);
                return results;
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        public async Task<List<DepartmentViewModel>> Get()
        {
            try
            {
                IList<string> list = new List<string> { "id" };
                var para = APIProvider.APIDefaultParameter(list, 0);

                var data = await _department.Query(para);
                var results = Mapper.Map<List<DepartmentViewModel>>(data);
                return results;
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        //public async Task<IEnumerable<DepartmentViewModel>> Get(short id)
        //{
        //    try
        //    {
        //        if(id == 0)
        //        {
        //            var data = await _iDepartmentRepo.GetDepartment(id);
        //            var results = Mapper.Map<List<DepartmentViewModel>>(data);
        //            return results;
        //        }
        //        else
        //        {
        //            var data = await _iDepartmentRepo.GetDepartment(id);
        //            var item = Mapper.Map<List<DepartmentViewModel>>(data);
        //            var results = new List<DepartmentViewModel>();

        //            if (item != null)
        //            {
        //                var files = APIHelper.Get<List<FileViewModel>>($"api/Libary?folder={ item.FirstOrDefault().Handler.Replace("~", "") }");
        //                if (files != null)
        //                {
        //                    foreach (var file in files)
        //                    {
        //                        var fileDept = new DepartmentViewModel()
        //                        {
        //                            Id = item.FirstOrDefault().Id,
        //                            Name = item.FirstOrDefault().Name,
        //                            Description = item.FirstOrDefault().Description,
        //                            Handler = file.Url,
        //                            Sort = item.FirstOrDefault().Sort
        //                        };
        //                        results.Add(fileDept);
        //                    }
        //                }
        //            }

        //            return results;
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        throw;
        //    }
        //}
    }
}
