using PatientPortal.Domain.Models.AUTHEN;
using PatientPortal.Internal.Common;
using PatientPortal.Internal.Models;
using PatientPortal.Provider.Common;
using PatientPortal.Provider.Models;
using PatientPortal.Utility.Application;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;

namespace PatientPortal.Internal.Controllers
{
    public class QAController : Controller
    {
        private static string controllerName = string.Empty;
        private readonly IUserSession _userSession;

        public QAController(IUserSession userSession)
        {
            this._userSession = userSession;
        }
        // GET: QA
        public ActionResult Index()
        {
            return View();
        }

        [HttpPost]
        public async Task<ActionResult> Answer(QAViewModel model)
        {
            if (ModelState.IsValid)
            {
                model.DoctorId = _userSession.UserId;
                controllerName = this.ControllerContext.RouteData.Values["controller"].ToString();
                string strUrl = APIProvider.APIGenerator(controllerName, APIConstant.ACTION_INSERT);
                var result = await APIProvider.DynamicTransaction<QAViewModel, bool>(model, strUrl, APIConstant.API_Resource_CORE);
                if (result)
                {
                    TempData["Alert"] = ApplicationGenerator.RenderResult(ApplicationGenerator.TypeResult.SUCCESS, ApplicationGenerator.GeneralActionMessage(APIConstant.ACTION_INSERT, ApplicationGenerator.TypeResult.SUCCESS));
                }
                else
                {
                    TempData["Alert"] = ApplicationGenerator.RenderResult(ApplicationGenerator.TypeResult.FAIL, ApplicationGenerator.GeneralActionMessage(APIConstant.ACTION_INSERT, ApplicationGenerator.TypeResult.FAIL));
                }
                return RedirectToAction("Index");
            }
            else
            {
                return View("Index", model);
            }
        }
    }
}