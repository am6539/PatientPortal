
@model PatientPortal.CMS.Models.DepartmentViewModel

@section styles{
    <link href="~/Content/checkbox-radio-build.css" rel="stylesheet" />
    <link href="~/Libs/jstree/dist/themes/default/style.min.css" rel="stylesheet" />
}

@using (Html.BeginForm("Create", "Department", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal" }))
            {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="form-group" style="display: none">
        @Html.LabelFor(m => m.Id, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.TextBoxFor(m => m.Id, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Nhập tên" })
            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "field-validation-error" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @placeholder = "Nhập nội dung", @row = "5" })
            @Html.ValidationMessageFor(m => m.Description)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Handler, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            <button type="button" class="btn btn-sm btn-warning btn-danger" id="btnBrowser">Chọn thư mục</button>
            @Html.TextBoxFor(m => m.Handler, new { @class = "form-control", @type = "text", @id = "txtUrl" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Sort, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.TextBoxFor(m => m.Sort, new { @class = "form-control", @type="number"})
            @Html.ValidationMessageFor(model => model.Sort, null, new { @class = "field-validation-error" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IsUsed, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            <div class="checkbox checkbox-info">
                @Html.CheckBoxFor(m => m.IsUsed, new { @class = "styled" })<label for="IsUsed"></label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3"></label>
        <div class="col-md-9">
            <button type="submit" class="btn btn-success btn-sm" style="width:100%;"><i class="fa fa-check" aria-hidden="true"></i> Thêm dịch vụ</button>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Chọn thư mục</h4>
            </div>
            <div class="modal-body">
                <div id="container">
                    <div id="MainTree">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSelFolder" class="btn btn-success btn-sm"><i class="fa fa-check" aria-hidden="true"></i> Chọn</button>
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><i class="fa fa-long-arrow-right"></i>Hủy</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Libs/jstree/dist/jstree.js"></script>

    <script>

        $(function () {
            $("#txtUrl").hide();
            var url = '';

            $('#myModal').on('show.bs.modal', function () {
                $.ajax({
                    type: "GET",
                    url: "/Department/GetTreeData",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        createJSTrees(data);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert(xhr.status);
                        alert(thrownError);
                    }
                });
            });

            function createJSTrees(jsonData) {
                $('#MainTree').jstree({
                    'core': {
                        'data': jsonData,
                        'check_callback': true,
                        'themes': { "stripes": true },
                    },
                    "plugins": ["themes", "dnd", "contextmenu", "ui", "crrm"]
                });
            }

            $('#MainTree')
                .on('changed.jstree', function (e, data) {
                    var i, j, r = [];
                    for (i = 0, j = data.selected.length; i < j; i++) {
                        r.push(data.instance.get_node(data.selected[i]).id);
                    }

                    url = r.join(', ');
                })

            $(document).on("click", "#btnSelFolder", function (e) {
                $('#myModal').modal('hide');
                $('#txtUrl').show("slow");
                $('#txtUrl').val('~' + url);
            });

            $(document).on("click", "#btnBrowser", function (e) {
                $('#myModal').modal('show');
                $('#txtUrl').hide("slow");
                $('#txtUrl').val('');
            });
        });
    </script>
}