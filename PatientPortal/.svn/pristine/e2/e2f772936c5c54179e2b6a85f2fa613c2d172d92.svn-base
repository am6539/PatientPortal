@using PatientPortal.Provider.Helpers;
@model PatientPortal.CMS.Models.PostViewModel
@{
    ViewBag.Title = "Chỉnh sửa bài viết";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Content/checkbox.css" rel="stylesheet" />
    <link href="~/Libs/Chosen/css/chosen.css" rel="stylesheet" />
    <link href="~/Libs/jquery-ui/jquery-ui.css" rel="stylesheet" />
    <link href="~/Libs/TagIt/css/jquery.tagit.css" rel="stylesheet" />
    <link href="~/Libs/TabPanel/tabBottomTriagle.css" rel="stylesheet" />
    <link href="~/Content/checkbox-radio-build.css" rel="stylesheet" />
    <style>
        .bootstrap-switch-large {
            width: 200px;
        }
    </style>
}

<div class="card">

@using (Html.BeginForm("Edit", "CMSPost", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card-title">
        <label><i class="fa fa-file-text-o"></i> @ViewBag.Title</label>
    </div>

    <div class="card-content">
        <div class="col-md-8">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation"><a href="#infoPostTab" aria-controls="infoPostTab" role="tab" data-toggle="tab"><i class="fa fa-file-text-o" aria-hidden="true"></i> Thông tin bài viết</a></li>
                <li role="presentation"><a href="#imageTab" aria-controls="imageTab" role="tab" data-toggle="tab"><i class="fa fa-picture-o" aria-hidden="true"></i> Hình ảnh</a></li>
                <li role="presentation"><a href="#metaSeoTab" aria-controls="metaSeoTab" role="tab" data-toggle="tab"><i class="fa fa-bookmark-o" aria-hidden="true"></i> SEO</a></li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="infoPostTab">
                    <div class="form-horizontal">
                        @Html.HiddenFor(model => model.WorkflowStateId)
                        @Html.HiddenFor(model => model.Id)
                        Html.IGroupTextBoxFor(m => m.TitleTrans, true,"",null, 12)
                        @Html.IGroupTextAreaFor(m => m.DescriptionTrans, true, 5, "", null, 12)
                        @Html.IGroupTextAreaFor(m => m.Detail, true, 5, "", null, 12)
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="imageTab">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-4 col-md-offset-4">
                                <div class="text-center">
                                    @Html.HiddenFor(model => model.Image)
                                    <img src="@Url.Content(Model.Image)" class="avatar img-circle" alt="Hình đại diện" style="width:100%; height:100%; max-width: 200px;">
                                    <div style="margin-top:10px;">
                                        @Html.IFileUpload()
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="metaSeoTab">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>Meta Robots Index</label>
                            </div>
                            <div class="col-md-12">
                                <div class="radio radio-success radio-inline">
                                    @Html.RadioButtonFor(model => model.MetaRobotIndex, 1, new { @aria_label = "Index" })
                                    @Html.Label("Index", new { @for = "MetaRobotIndex" })
                                </div>
                                <div class="radio radio-success radio-inline">
                                    @Html.RadioButtonFor(model => model.MetaRobotIndex, 0, new { @id = "MetaRobotNoIndex", @aria_label = "NoIndex" })
                                    @Html.Label("NoIndex", new { @for = "MetaRobotNoIndex" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>Meta Robots Follow</label>
                            </div>
                            <div class="col-md-12">
                                <div class="radio radio-success radio-inline">
                                    @Html.RadioButtonFor(model => model.MetaRobotFollow, 1, new { @aria_label = "Follow" })
                                    @Html.Label("Follow", new { @for = "MetaRobotFollow" })
                                </div>
                                <div class="radio radio-success radio-inline">
                                    @Html.RadioButtonFor(model => model.MetaRobotFollow, 0, new { @id = "MetaRobotNoFollow", @aria_label = "Nofollow" })
                                    @Html.Label("Nofollow", new { @for = "MetaRobotNoFollow" })
                                </div>
                            </div>
                        </div>
                        @Html.IGroupDropDownListFor(m => m.MetaRobotAdvanced, new SelectList(new[]{
                                    new SelectListItem { Text = "None", Value = "1" },
                                    new SelectListItem { Text = "NO ODP", Value = "2" },
                                    new SelectListItem { Text = "NO YDIR", Value = "3" },
                                    new SelectListItem { Text = "No Archive", Value = "4" },
                                    new SelectListItem { Text = "No Snippet", Value = "5" }
                                    }, "Value", "Text"
                                    ), false, "", null, 12)
                        @Html.IGroupTextBoxFor(m => m.TitleSEO, false, "SEO Title", null, 12)
                        @Html.IGroupTextAreaFor(m => m.DescriptionSEO, false, 3, "SEP Description", null, 12)
                        @Html.IGroupTextBoxFor(m => m.Canonical, false, "Canonical URL", null, 12)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading"><label>Chức năng</label></div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ISubmitButton("Trình duyệt")
                        @Html.IButton(Url.Action("Index", "CMSPost"), ActionButton.Cancel, null)
                        <hr />
                        @Html.ICustomButton("Lưu tạm", "fa-clipboard", "btnDraft")
                        @Html.ICustomButton("Xóa tạm", "fa-trash", "btnDelDraft", true, new {@class = "btn btn-sm btn-danger" })
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading"><label>Thông tin chung</label></div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.IGroupDropDownListFor(m => m.CategoryId, new SelectList(ViewBag.CategoryId, "Id", "Name"), false, null, null, 12)
                        @Html.IGroupTextBoxFor(m => m.Author, false, "Tác giả", null, 12)
                        @Html.IGroupDropDownListFor(m => m.Priority, new SelectList(ViewBag.Priorities, "Id", "Name"), false, null, null, 12)
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.ITextBoxFor(model => model.ExpiredDate, "Hạn hiệu lực")
                            </div>
                            <div class="col-md-6">
                                @Html.IDropDownListFor(model => model.Type, new SelectList(new[]{
                                    new SelectListItem { Text = "Bản tin", Value = "1" },
                                    new SelectListItem { Text = "Video", Value = "2" },
                                    new SelectListItem { Text = "Hình ảnh", Value = "3" }}, "Value", "Text"))
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-12">
                                <label class="badge">Tags</label>
                                <ul id="PostTags">
                                    @if (ViewBag.Tags != null)
                                    {
                                        var tags = ViewBag.Tags.Split(';');
                                        for (var i = 0; i < tags.Length; i++)
                                        {
                                            <li> @tags[i] </li>
                                        }
                                    }
                                </ul>
                                @Html.HiddenFor(m => m.Tag)
                            </div>
                        </div>
                        <div class="hide">
                            @Html.HiddenFor(m => m.Status)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
</div>

@section scripts{
    <script src="~/Libs/Chosen/js/chosen.jquery.min.js"></script>
    <script type="text/javascript">
    var config = {
      '.chosen-select'           : {},
      '.chosen-select-deselect'  : {allow_single_deselect:true},
      '.chosen-select-no-single' : {disable_search_threshold:10},
      '.chosen-select-no-results': {no_results_text:'Oops, nothing found!'},
      '.chosen-select-width'     : {width:"95%"}
    }
    for (var selector in config) {
      $(selector).chosen(config[selector]);
    }
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
        $("#PostTags").tagit();

        $("#form-data").submit(function (e) {
            //e.preventDefault();
            var arrayTag = $("#PostTags").tagit("assignedTags");

            var tags = "";
            for (index = 0; index < arrayTag.length; ++index) {
                tags = tags + (tags == "" ? "" : ";") + arrayTag[index];
            }

            //alert(tags);
            $("#Tag").val(tags);
            return true;
        });

        $("#btnDraft").click(function () {
            //Status: 1 - Editor, 2 - Draft, 3 - Trash
            //Set default status to Draft 
            $("#Status").val("2");
            $("#form-data").submit();
        });

        $("btnDelDraft").click(function () {
            //Status: 1 - Editor, 2 - Draft, 3 - Trash
            //Set default status to Draft 
            $("#Status").val("3");
            $("#form-data").submit();
        })

    });
    </script>
    <script src="~/Libs/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Libs/TagIt/js/tag-it.js"></script>
    <script>
        CKEDITOR.replace('editor3', {
            filebrowserImageBrowseUrl: '/Library/UploadPartial?folder=' + '@Path.GetDirectoryName(Model.Image).Split('\\').Last()',
            filebrowserImageUploadUrl: '/Library/UploadNow?folder=' + '@Path.GetDirectoryName(Model.Image).Split('\\').Last()'
        });

        function updateValue(id, value) {
            document.getElementById(id).value = value;
            document.getElementById("cke_70_previewLink").innerHTML = '<img id="cke_71_previewImage" alt="" src="' + value + '" style="width: 300px; height: 200px;">';
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ExpiredDate").datetimepicker({
                format: 'DD/MM/YYYY',
                locale: 'vi'
                //minDate: Date.now(),
                //maxDate: moment().add(7, 'days')
            });
        });
</script>
}





