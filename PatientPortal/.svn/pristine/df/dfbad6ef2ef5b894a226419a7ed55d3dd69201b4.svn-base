using AutoMapper;
using PatientPortal.API.SPA.ViewModels;
using PatientPortal.IRepository.SPA;
using PatientPortal.Provider.Models;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using System.Web.Http;

namespace PatientPortal.API.SPA.Controllers
{
    public class QAController : ApiController
    {
        private readonly IQARepo _iQARepo;
        private readonly string PATH_IMG = ConfigurationManager.AppSettings["web:cms"];

        public QAController(IQARepo iQARepo)
        {
            this._iQARepo = iQARepo;
        }

        [HttpGet]
        public async Task<HttpResponseMessage> Get(byte pageIndex, byte numberInPage, string Search = null)
        {
            try
            {
                List<string> list = new List<string> { "pageIndex", "numberInPage", "Search" };
                Dictionary<string, dynamic> para = null;

                para = APIProvider.APIDefaultParameter(list, pageIndex, numberInPage, Search);
                var data = await _iQARepo.Query(para);
                var results = new ListQAViewModel();
                if (data == null)
                {
                    results = null;
                    return Request.CreateResponse(HttpStatusCode.OK, results);
                }
                results.ListViewModel = Mapper.Map<List<QAViewModel>>(data.Item1);
                results.TotalItem = data.Item2;

                return Request.CreateResponse(HttpStatusCode.OK, results);
            }
            catch (Exception ex)
            {
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, ex.Message);
            }
        }
    }
}
