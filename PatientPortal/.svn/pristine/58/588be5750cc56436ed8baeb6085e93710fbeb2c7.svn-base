using System.Collections.Generic;
using System.Web.Http;
using PatientPortal.IRepository.CMS;
using AutoMapper;
using PatientPortal.API.CMS.ViewModels;
using PatientPortal.Domain.Utilities;

namespace PatientPortal.API.CMS.Controllers
{
    public class FeatureController : ApiController
    {
        private readonly IFeatureRepo _feature;
        public FeatureController(IFeatureRepo feature)
        {
            this._feature = feature;
        }


        // GET api/values
        ///[Filters.DeflateCompression]
        public List<FeatureViewModel> Get()
        {
            //Mapping
          var source = _feature.GetAll();
            List<FeatureViewModel> dest = Mapper.Map<List<FeatureViewModel>>(source);

            return dest;
        }

        /// <summary>
        /// Get by Id
        /// </summary>
        /// <param name="id"></param>
        /// <returns>Category view model</returns>
        // GET api/values/5
        public FeatureViewModel GetById(byte id)
        {
            var source = _feature.GetById(id);
            FeatureViewModel dest = Mapper.Map<FeatureViewModel>(source);
            return dest;
        }

        /// <summary>
        /// Action: Insert/Update/Delete 
        /// </summary>
        /// <param name="categoryModel">object "model"</param>
        /// <param name="action">Action: 'I' - Insert; 'U'- Update; 'D'- Delete</param>
        /// <returns>Result: Success- true; Fail- false</returns>
        [HttpPost]
        public bool Transaction(FeatureViewModel model, char action)
        {
            var obj = Mapper.Map<Domain.Models.CMS.Feature>(model);
            var data = new List<Domain.Models.CMS.Feature>();
            data.Add(obj);
            return _feature.Transaction(data, action);
        }

        /// <summary>
        /// Check name is existed
        /// </summary>
        /// <param name="name"></param>
        /// <param name="id"></param>
        /// <returns>If existed: true - else: false</returns>
        [HttpGet]
        public bool CheckExist(string title, byte id)
        {
            return _feature.CheckExist(title, id);
        }
    }
}
