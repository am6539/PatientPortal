using PatientPortal.Utility.Common;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Helpers;

namespace PatientPortal.Utility.Files
{
    public static class FileManagement
    {
        #region [WebImage]
        public static bool UploadImage(HttpPostedFileBase file, string folder, ref string savedFile)
        {
            //Check file name
            if (file == null || file.FileName.Length < 1)
            {
                return false;
            }

            string _file = Path.Combine(folder);
            string _path = HttpContext.Current.Server.MapPath(_file);

            //Create folder
            if (!Directory.Exists(_path))
                Directory.CreateDirectory(_path);

            _file = Path.Combine(folder, Path.GetFileName(file.FileName));
            _path = Path.Combine(_path, Path.GetFileName(file.FileName));

            if (!File.Exists(_path))
            {
                try
                {
                    WebImage image = new WebImage(file.InputStream);
                    image.Save(_path);
                    savedFile = _file;
                }
                catch (Exception ex)
                {
                    return false;
                }
            }
            else
            {
                savedFile = _file;
            }

            return true;
        }

        public static bool UploadImage(HttpPostedFileBase file, string folder)
        {
            //Check file name
            if (file == null || file.FileName.Length < 1)
            {
                return false;
            }

            string _file = Path.Combine(folder);
            string _path = HttpContext.Current.Server.MapPath(_file);

            //Create folder
            if (!Directory.Exists(_path))
                Directory.CreateDirectory(_path);

            _file = Path.Combine(folder, Path.GetFileName(file.FileName));
            _path = Path.Combine(_path, Path.GetFileName(file.FileName));

            if (!File.Exists(_path))
            {
                try
                {
                    WebImage image = new WebImage(file.InputStream);
                    image.Save(_path);
                }
                catch (Exception ex)
                {
                    return false;
                }
            }
            return true;
        }
        public static bool UploadImage(HttpPostedFileBase file, string folder, ref string savedFile, int width, int height, string WatermarkText = "")
        {
            //Check file name
            if (file == null || file.FileName.Length < 1)
            {
                return false;
            }

            string _file = Path.Combine(ValueConstant.IMAGE_PATH + folder);
            string _path = HttpContext.Current.Server.MapPath(_file);

            //Create folder
            if (!Directory.Exists(_path))
                Directory.CreateDirectory(_path);

            _file = Path.Combine(_file, Path.GetFileName(file.FileName));
            _path = Path.Combine(_path, Path.GetFileName(file.FileName));

            if (!File.Exists(_path))
            {
                try
                {
                    WebImage image = new WebImage(file.InputStream);
                    if (width > 0)
                    {
                        if (height == 0)
                            height = width;
                        image.Resize(width, height);
                    }
                    if (WatermarkText.Length > 0)
                    {
                        image.AddTextWatermark(WatermarkText);
                    }
                    image.Save(_path);

                    savedFile = _file;
                }
                catch (Exception ex)
                {
                    return false;
                }
            }
            else
            {
                savedFile = _file;
            }

            return true;
        }
        public static bool DeleteImage(string file)
        {
            bool _ret = true;

            if (file.Length < 1)
                return _ret;
            file = HttpContext.Current.Server.MapPath(file);
            if (File.Exists(file))
            {
                try
                {
                    File.Delete(file);
                }
                catch (Exception ex)
                {
                    _ret = false;
                }
            }
            return _ret;
        }
        #endregion

        #region [Other File]
        public static bool UploadFile(HttpPostedFileBase file, string folder, ref string savedFile)
        {
            //Check file name
            if (file == null || file.FileName.Length < 1)
            {
                return false;
            }

            string _file = Path.Combine(folder);
            string _path = HttpContext.Current.Server.MapPath(_file);

            //Create folder
            if (!Directory.Exists(_path))
                Directory.CreateDirectory(_path);

            _file = Path.Combine(folder, Path.GetFileName(file.FileName));
            _path = Path.Combine(_path, Path.GetFileName(file.FileName));

            if (!File.Exists(_path))
            {
                try
                {
                    file.SaveAs(_path);
                    savedFile = _file;
                }
                catch (Exception ex)
                {
                    return false;
                }
            }
            else
            {
                savedFile = _file;
            }

            return true;
        }
        #endregion
    }
}