using AutoMapper;
using PatientPortal.API.Core.Models;
using PatientPortal.Domain.Models.CORE;
using PatientPortal.IRepository.CORE;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Web.Http;

namespace PatientPortal.API.Core.Controllers
{
    public class UserController : ApiController
    {
        private readonly IUserRepo _user;
        #region Constructor
        public UserController(IUserRepo user)
        {
            this._user = user;
        }
        #endregion

        [HttpGet]
        public async Task<List<UserViewModel>> Get([FromUri]UserFilterViewModel param)
        {
            Dictionary<string, dynamic> para = new Dictionary<string, dynamic>();
            para.Add("Id", 0);
            para.Add("Type", param.Type);
            para.Add("Search", param.Search);

            var source = await _user.Query(para);
            List<UserViewModel> dest = Mapper.Map<List<UserViewModel>>(source);

            return dest;
        }

        [HttpGet]
        public async Task<List<UserViewModel>> Get(int Id)
        {
            Dictionary<string, dynamic> para = new Dictionary<string, dynamic>();
            para.Add("Id", Id);

            var source = await _user.Query(para);
            List<UserViewModel> dest = Mapper.Map<List<UserViewModel>>(source);

            return dest;
        }

        [HttpPost]
        public async Task<int> Transaction(UserViewModel userModel, char action)
        {
            var data = Mapper.Map<User>(userModel);
            return await _user.Transaction(data, action);
        }
    }
}
