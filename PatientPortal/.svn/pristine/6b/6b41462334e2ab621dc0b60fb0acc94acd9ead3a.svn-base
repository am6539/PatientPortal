using PatientPortal.CMS.Models;
using PatientPortal.CMS.Utility;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Linq.Dynamic;
using PatientPortal.CMS.Common;

namespace PatientPortal.CMS.Controllers
{
    public class PostController : Controller
    {
        // GET: Post
        public ViewResult Index(string languageCode)
        {
            try
            {
                languageCode = ConfigurationManager.AppSettings["AdminLanguageCode"];

                var listCatg = APIHelper.Get<List<CategoryViewModel>>($"api/Category");
                if (listCatg != null)
                    ViewData["ListCategory"] = listCatg;
                    
                var results = APIHelper.Get<List<PostListViewModel>>($"api/Post?languageCode={languageCode}");

                return View(results);
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        // GET: Post/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: Post/Create
        [HttpPost]
        public ActionResult Create(FormCollection collection)
        {
            try
            {
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        // GET: Post/Edit/5
        public ActionResult Edit(int id)
        {
            try
            {
                var listCatg = APIHelper.Get<List<CategoryViewModel>>($"api/Category");
                var result = APIHelper.Get<PostViewModel>($"api/Post?PostId={id}");

                if (listCatg != null)
                    ViewBag.CategoryId = new SelectList(listCatg, "ID", "Name", result.CategoryId);
                
                return View(result);
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        // POST: Post/Edit/5
        [HttpPost]
        public ActionResult Edit(int id, PostViewModel postView)
        {
            try
            {
                var result = APIHelper.TransactionAsync<PostViewModel>(postView, $"api/Post?action={ ValueConstant.ACTION_INSERT }");
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        // GET: Post/Delete/5
        public ActionResult Delete(int id)
        {
            return View();
        }

        // POST: Post/Delete/5
        [HttpPost]
        public ActionResult Delete(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add delete logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }
    }
}
