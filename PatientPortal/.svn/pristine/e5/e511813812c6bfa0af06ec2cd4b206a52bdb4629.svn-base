using AutoMapper;
using PatientPortal.API.SPA.ViewModels;
using PatientPortal.Domain;
using PatientPortal.Domain.Models.SPA;
using PatientPortal.IRepository.SPA;
using PatientPortal.Provider.Models;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Web.Http;
using static PatientPortal.Domain.EnumUserConstants;

namespace PatientPortal.API.SPA.Controllers
{
    public class UserController : ApiController
    {
        private readonly IUserRepo _iUserRepo;
        public UserController(IUserRepo iUserRepo)
        {
            this._iUserRepo = iUserRepo;
        }

        public async Task<List<UserViewModel>> Get(string search, UserType type = EnumUserConstants.UserType.ISDOCTOR)
        {
            IList<string> list = new List<string> { "search", "type" };
            var para = APIProvider.APIDefaultParameter(list, search, (byte)type);
            var source = await _iUserRepo.Query(para);
            List<UserViewModel> dest = Mapper.Map<List<UserViewModel>>(source);

            return dest;
        }

        public async Task<UserViewModel> Get(int id)
        {
            IList<string> list = new List<string> { "Id", "Search" };
            var para = APIProvider.APIDefaultParameter(list, id, "");
            var source = await _iUserRepo.Get(para);
            UserViewModel dest = Mapper.Map<UserViewModel>(source);

            return dest;
        }
    }
}
