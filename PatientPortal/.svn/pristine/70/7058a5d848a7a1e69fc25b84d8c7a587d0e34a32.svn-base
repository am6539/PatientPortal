using AutoMapper;
using Newtonsoft.Json;
using PatientPortal.API.SPA.Common;
using PatientPortal.API.SPA.Utility;
using PatientPortal.API.SPA.ViewModels;
using PatientPortal.IRepository.SPA;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Web.Http;
using System.Web.Mvc;

namespace PatientPortal.API.SPA.Controllers
{
    public class DepartmentController : ApiController
    {
        readonly IDepartmentRepo _iDepartmentRepo;

        public DepartmentController(IDepartmentRepo iDepartmentRepo)
        {
            this._iDepartmentRepo = iDepartmentRepo;
        }

        public async Task<IEnumerable<DepartmentViewModel>> GetDepartment(int id)
        {
            try
            {
                if(id == 0)
                {
                    var data = await _iDepartmentRepo.GetDepartment(id);
                    var results = Mapper.Map<List<DepartmentViewModel>>(data);
                    return results;
                }
                else
                {
                    var data = await _iDepartmentRepo.GetDepartment(id);
                    var item = Mapper.Map<List<DepartmentViewModel>>(data);
                    var results = new List<DepartmentViewModel>();

                    if (item != null)
                    {
                        var files = APIHelper.Get<List<FileViewModel>>($"api/Libary?folder={ item.FirstOrDefault().Handler.Replace("~", "") }");
                        if (files != null)
                        {
                            foreach (var file in files)
                            {
                                var fileDept = new DepartmentViewModel()
                                {
                                    Id = item.FirstOrDefault().Id,
                                    Name = item.FirstOrDefault().Name,
                                    Description = item.FirstOrDefault().Description,
                                    Handler = file.Url,
                                    Sort = item.FirstOrDefault().Sort
                                };
                                results.Add(fileDept);
                            }
                        }
                    }

                    return results;
                }
            }
            catch (Exception ex)
            {
                throw;
            }
        }
    }
}
