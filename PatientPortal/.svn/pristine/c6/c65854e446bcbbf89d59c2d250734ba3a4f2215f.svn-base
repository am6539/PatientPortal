using PatientPortal.DataAccess.Repo.CMS;
using System;
using System.Collections.Generic;
using System.Linq;
using PatientPortal.Domain.Models.CMS;
using PatientPortal.Domain.Utilities;
using PatientPortal.DataAccess.Dapper;
using System.Transactions;
using Dapper;

namespace PatientPortal.DataAccess.CMS
{
    public class AdvertiseImpl : IAdvertise
    {
        public bool CheckExist(string name, byte id)
        {
            using (TransactionScope scope = new TransactionScope())
            {
                try
                {
                    DapperConfiguration.OpenConnection(1);

                    var data = DapperConfiguration.db.Query<bool>("usp_Advertise_CheckExistName",
                        new { Name = name, Id = id },
                        commandType: System.Data.CommandType.StoredProcedure).FirstOrDefault();

                    DapperConfiguration.CloseConnection();

                    scope.Complete();
                    return data;

                }
                catch (Exception ex)
                {
                    LogHelper.WriteLog("Execute Category get data: " + ex.Message);
                    return false;
                }
            }
        }

        public Advertise Get(byte Id)
        {
            using (TransactionScope scope = new TransactionScope())
            {
                try
                {
                    DapperConfiguration.OpenConnection(1);

                    var data = DapperConfiguration.db.Query<Advertise>("usp_Advertise",
                        new { Id = Id },
                        commandType: System.Data.CommandType.StoredProcedure).FirstOrDefault();

                    DapperConfiguration.CloseConnection();

                    scope.Complete();
                    return data;

                }
                catch (Exception ex)
                {
                    LogHelper.WriteLog("Execute Category get data: " + ex.Message);
                    return null;
                }
            }
        }

        public List<Advertise> GetAll()
        {
            using (TransactionScope scope = new TransactionScope())
            {
                try
                {
                    DapperConfiguration.OpenConnection(1);

                    var data = DapperConfiguration.db.Query<Advertise>("usp_Advertise",
                        new { Id = GlobalVariables.IsTransParameter },
                        commandType: System.Data.CommandType.StoredProcedure).ToList();

                    DapperConfiguration.CloseConnection();

                    scope.Complete();
                    return data;

                }
                catch (Exception ex)
                {
                    LogHelper.WriteLog("Execute Category get data: " + ex.Message);
                    return null;
                }
            }
        }

        public bool Transaction(List<Advertise> data, char action)
        {
            using (TransactionScope scope = new TransactionScope())
            {
                try
                {
                    var val = new Lib.DataGenerator().CommitData<Advertise>(data, "usp_Advertise_Transaction", action);
                    scope.Complete();
                    return true;
                }
                catch (Exception ex)
                {
                    LogHelper.WriteLog("Execute CategoryTransaction: " + ex.Message);
                    return false;
                }
            }
        }
    }
}
